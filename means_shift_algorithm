import numpy as np
from sklearn.datasets import make_blobs
import random
import math
import matplotlib.pyplot as plt
#generated the datapoints
'''clusters = [[2, 2, 2], [7, 7, 7], [5, 13, 13]]
X, _ = make_blobs(n_samples=150, centers=clusters, cluster_std=0.60)
'''
#block for accepting datapoints
'''''
#accept data points
print("Enter the number of data points")
n=int(input())
point=points=[]
for i in range(n):
    point=list(map(int,input().split()))
    points.append(point)
print(points)'''''

#feeding the datapoints from data set to the rest of the program
points=np.array([[5.0081842325110655, 12.16515969602098, 12.796372924439119],
[4.524269758383287, 13.010156929650005, 14.356082279444387],
[5.032346903347192, 11.487348716506036, 12.726726936648598],
[7.049985092733686, 8.068031591418062, 7.355415437343891],
[1.8302847490064227, 1.8912694802597576, 2.1193726946483054],
[4.084607104592615, 13.58647554683438, 13.08545748877778],
[2.2383730189395754, 2.407542971371568, 1.383322959085821],
[1.895990209576327, 1.9595953992731812, 1.9355545989258296],
[1.2189203562767217, 1.7445949607691404, 2.077461554841593],
[4.751474933109672, 12.272237251472777, 11.803583750589471],
[1.8225205627480707, 1.4143500484565508, 1.3468385307663628],
[5.283253433462711, 13.510365640438202, 12.696202302038612],
[3.6335630267107826, 13.234188496651342, 13.008219228386425],
[2.874450410028414, 2.9461801137429107, 1.8182481423034536],
[7.14135864378033, 6.8419790493273345, 7.158338753969339],
[7.067284247358424, 7.12349774390314, 7.240356016120175],
[2.095092068566625, 2.132997797587616, 2.346512517341789],
[5.904451822083191, 13.265723060831945, 12.660709865631121],
[4.408552274681571, 12.556046103949246, 12.453391576122792],
[7.4832386730816145, 6.675961614519182, 7.182159609433048],
[4.065027493071663, 13.14823782046084, 13.381719147886312],
[6.226023781574173, 7.513600974673949, 6.271915780521326],
[5.662892520999653, 14.071599217921836, 13.857288514087893],
[7.230530887540417, 7.612909143581161, 6.675095550598074],
[2.1579531783626713, 2.5862807136665786, 0.5081309448013887],
[3.814921414535749, 13.601460705501806, 12.165929464456045],
[7.220361334934247, 8.166338489356425, 8.049361201006612],
[2.0979808673689697, 2.1536504404348746, 2.9734293155247666],
[5.006990595023603, 12.11527254104425, 12.589607566502975],
[7.22805044882589, 5.645908593679044, 7.58057943977],
[1.2576999905058281, 2.4541591869424475, 1.9824821049494619],
[2.175509759401046, 1.7518950125244546, 1.3613123479686058],
[4.748001837554554, 12.230014335395772, 12.717430045158522],
[6.964750797079429, 7.252034513495564, 7.222485921976469],
[4.727492008362166, 6.811888080883882, 7.79011055681509],
[5.141704587420735, 13.371908475448201, 13.490145752469212],
[5.417510386087862, 13.139163702241794, 12.58774845471547],
[7.38934595872683, 5.987968098652961, 7.866617767424816],
[6.749351623839476, 6.617085982443264, 6.713131775001832],
[7.209672867626749, 7.016534373340499, 7.0823086075931565],
[7.2591576820455765, 7.2669150237620315, 7.035090305507685],
[5.221293983324712, 12.368604728079829, 13.43741784909766],
[1.9604871351566278, 2.4490592493964236, 2.2830763868459227],
[7.422441209396436, 6.115275646694978, 8.031128005644634],
[1.3284242647770848, 1.367348249913218, 1.5275233428077348],
[6.577645606394728, 6.299398261558213, 7.678845473563054],
[2.2151083785767716, 2.307707966997344, 1.4200996519404439],
[6.424637872792003, 12.415028520682176, 12.837329545703673],
[2.094000283386513, 2.052939799325633, 2.0951170593637416],
[3.758061820511588, 12.694483834405444, 12.472563949205524],
[4.987884724450299, 12.89304280478421, 12.567187963134703],
[7.054443202745102, 7.2399904100350545, 6.922147312566309],
[6.021546483126898, 12.952461450969125, 13.139313385749002],
[6.931804979051971, 7.900216479380721, 6.855858146842436],
[7.267451293174272, 6.8693236068967884, 7.262556868043015],
[4.174008789671974, 13.273632429579614, 12.583506826960532],
[1.7966539690094, 1.2365261448290492, 2.0735899303194554],
[5.279639789877755, 13.367610779679945, 12.606771363182201],
[5.009529094340719, 13.357591945160747, 13.850519914489269],
[5.057235914449021, 12.546438913106229, 12.27940419124719],
[6.258888743035493, 6.116269745581476, 5.635801157238417],
[1.351909634429311, 2.1299864393267014, 2.1752295793133882],
[5.40632223704812, 13.036199269103713, 12.966649963928681],
[5.274300930002428, 13.228942968262988, 12.586862151570227],
[1.6875230285508458, 1.8757278627268614, 1.4879584337517162],
[2.0820869940233915, 2.3555364482117813, 1.025723423055347],
[7.824748773493577, 7.498482393582993, 6.552719393622961],
[1.5773364588303371, 1.7591165920407432, 2.8317938798568507],
[6.457440791742344, 6.761702117591674, 8.216053565948611],
[2.0055023055000194, 1.6579581679448894, 0.8939825792132519],
[1.4294874016138737, 2.0221262280828007, 1.1598019986064552],
[5.192894137385103, 13.650958891698336, 13.785485172822279],
[4.965044784410939, 12.579653122595351, 12.782094758755953],
[6.872116183195062, 7.483946602597883, 6.716605986862896],
[3.4096989145610777, 2.7381598003796106, 2.647839700207098],
[2.2101279455377103, 2.4721254073730545, 1.848428929876399],
[6.688580104613321, 5.399434750602097, 6.9044099180703755],
[6.8494038877819925, 6.841194841856023, 6.684304997957715],
[1.3386552692802274, 1.8256160530740801, 2.2132193073599136],
[4.968783694292627, 12.580238682825776, 13.680354535482271],
[1.2177563666947853, 2.3179204578596875, 2.1942218194000565],
[2.3579046964130748, 1.0097251321790233, 1.8523169887872968],
[7.673112226075839, 6.661974777583726, 6.560592936563382],
[0.9333917015561837, 1.9517627365945847, 2.6373262908707487],
[8.478604938776153, 6.123749060080787, 7.147688139523345],
[7.254187422242801, 6.803188367095421, 6.808765895318959],
[7.330466085587667, 7.155322847476863, 7.564072471833179],
[7.121298411402746, 7.014944440820998, 6.21530622087056],
[7.307192711189659, 6.509741537517128, 7.04200202643159],
[8.137222011297993, 7.046147939032538, 7.017473516485697],
[1.9385064678398907, 2.7133601060176753, 1.9890995813907526],
[1.7417309515547958, 2.811824569773548, 1.9835850104079744],
[1.943261921459537, 1.8696211892217927, 1.6799345032848318],
[5.0647644963716525, 12.206962415014495, 13.997068465379101],
[7.517937687166029, 7.299329726292464, 5.848072474761041],
[1.3922754838200673, 1.364194125732657, 2.5438957391395682],
[2.8987911896787484, 3.159891793499818, 1.924075851008564],
[5.698917168328732, 6.0792009198066035, 6.737295977817419],
[5.828076808970854, 12.59747255374792, 12.928889762476526],
[5.958783598999311, 7.537692087216743, 7.182278805398861],
[4.727041542367153, 12.372866851055392, 13.777532157331168],
[5.380999479522787, 13.001766322513701, 13.183489877914583],
[5.417354763073894, 5.604940435941112, 7.419715265570046],
[4.481120746763306, 12.535067396156762, 13.340409321480507],
[5.854155542015632, 13.84634089689238, 13.031379206067825],
[7.59293868110535, 7.343208415489494, 7.479559746366477],
[7.513187727002409, 7.725296373355083, 6.922794333537632],
[6.1072888686558615, 7.177792260098424, 6.840397599260214],
[2.417345235897389, 2.4410123445043643, 2.89420592286989],
[8.57294245409502, 7.0928680343616275, 6.394856015522744],
[2.219404179529204, 2.6745140908618272, 2.6345792941806248],
[8.059002762972424, 6.600033969700685, 7.134784050115358],
[5.2152496941029005, 13.232457765852477, 13.796339362866295],
[1.9397760876197079, 2.6010791642165607, 1.4843357168982947],
[4.003423263635064, 12.619903710159463, 12.613822167878565],
[5.06247892380568, 13.364983615748693, 13.997244149979029],
[4.759698512831689, 12.799603249513972, 12.629099486488947],
[1.837324360981827, 1.9483842076764462, 2.0834987752476493],
[7.659794056925755, 7.1900341097724825, 7.023739106752795],
[1.9572746436299, 0.81272460182808, 2.840152302314413],
[6.4822210726815355, 6.207003978177811, 7.8717942004412995],
[4.608673540218792, 13.404589055198526, 13.511000564476396],
[6.631039833586632, 7.516436315544883, 7.157969595762061],
[4.397232408459214, 14.075789473902633, 13.077964513633544],
[4.888015430766425, 13.131201893501723, 13.341443039469],
[5.972961185204625, 6.5690532818666565, 7.5845035262777],
[2.5868730439032985, 2.45795286408737, -0.016722930725143303],
[2.1650873580778978, 2.2668492344807265, 3.175356295302433],
[4.58419641141425, 11.737817093860029, 12.920924140072492],
[2.414196131485549, 1.2713343573394678, 1.717673952288469],
[5.075902920261036, 14.73084482494289, 13.907349711248699],
[1.4018044397058302, 0.8317572579369099, 2.3516077182678976],
[6.280969597116388, 6.702944066982451, 6.96040375917948],
[3.522895246839311, 2.106725543274904, 1.6393219002041293],
[4.407632330645778, 14.431840837522946, 11.903229437205946],
[6.787006568933822, 6.827271843216934, 6.021079324996023],
[1.2472249162357534, 2.356864330931984, 1.7194550866491731],
[4.213655912847926, 12.47262721600877, 13.712583244667169],
[4.71415891361703, 12.78869419773743, 13.316189397655647],
[2.030367111078655, 2.502641291730962, 2.265924965139684],
[5.019344543968959, 12.698633223222108, 14.115422642428804],
[2.188051010592134, 1.9581270660791625, 1.704066127849858],
[3.3646900431392597, 1.1588527784688518, 1.420760113655053],
[7.29904050995667, 6.7958689507979315, 7.430041952799289],
[4.056298188725195, 1.860013474025088, 1.9341400528579638],
[7.159676242710271, 6.7230058684451, 7.32390118875356],
[2.744112364396006, 3.281520016987211, 0.7867967847739803],
[5.274659652719392, 12.96342916586942, 12.167393091291448],
[7.27406471129563, 7.541020193763322, 7.726520075474089],
[0.8364597465108894, 1.7535792857564108, 2.146998754203577]])
#initialize random center and range
#trust me i have the points  
c=points[0].tolist()
#print(type(c))
h=1
#initializing the parzen window and  the ranges for x,y,z.
rx=[c[0]-h/2,c[0]+h/2]
ry=[c[1]-h/2,c[1]+h/2]
rz=[c[2]-h/2,c[2]+h/2]
#print("xrange",rx,"yrange",ry,"zrange",rz)
c_up=[]
change=10000000
count=1
x,y,z=0,0,0
d=0
pd=0
lol=0
cw=0
pic=[]
while int(change)!=0:
    
    #print(f"iteration no {lol}")
    for i in points:
        #print(i)
        if ((i[0]>rx[0]) and (i[0]<rx[1])) and ((i[1]>ry[0]) and (i[1]<ry[1])) and ((i[2]>rz[0]) and (i[2]<rz[1])):
            #calculating mean of points present inside the window
            x+=i[0]
            y+=i[1]
            z+=i[2]
            count+=1
            #print("reached here")
            #print("count=",count)
            pic.append(i.tolist())
            
    #print(pic)
    #pic=np.array(pic)
    #print("no of points inside window:\n",len(pic))
    if count==0:
        break
    #calc mean
    c_up=[x/count,y/count,z/count]
    rx=[c_up[0]-(h/2),c_up[0]+(h/2)]
    ry=[c_up[1]-(h/2),c_up[1]+(h/2)]
    rz=[c_up[2]-(h/2),c_up[2]+(h/2)]
    #calc distance between prev mean and current mean
    d=math.sqrt(math.pow(c_up[0]-c[0],2)+math.pow(c_up[1]-c[1],2)+math.pow(c_up[2]-c[2],2))
    change=d
    #changing the prev mean to current mean
    c=c_up
    pd=d
    count=0
    cw+=1
    lol+=1
    pic=[]
    print(f"Iteration {lol}: Mean = {c}, Change = {change}")
    
print("final mean",c)
#output
'''Iteration 1: Mean = [4.052069643485735, 10.137986131486064, 10.63440490582151], Change = 3.1141119892549822
final mean [4.052069643485735, 10.137986131486064, 10.63440490582151]'''
